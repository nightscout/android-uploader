buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.robolectric:robolectric-gradle-plugin:0.14.0'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'robolectric'

android {
    compileSdkVersion 21
    buildToolsVersion '21.1.1'

    defaultConfig {
        applicationId "com.nightscout.android"
        minSdkVersion 12
        targetSdkVersion 18
    }

    lintOptions {
        quiet false
        checkAllWarnings true
        warningsAsErrors false
        abortOnError true
        textReport true
        textOutput 'stdout'
        htmlOutput file("lint-report.html")
        htmlReport true
        checkReleaseBuilds true
        warning 'ProtectedPermissions', 'InvalidPackage'
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        androidTest {
            setRoot('src/test')
        }
    }
}

robolectric {
    include '**/*Test.class'
    exclude '**/espresso/**/*.class'
}

repositories {
    maven { url "https://raw.github.com/embarkmobile/zxing-android-minimal/mvn-repo/maven-repository/" }
    maven { url "https://oss.sonatype.org/content/groups/public/" }
}

dependencies {
    compile(project(':core')) {
        // JSON already included by adk.
        exclude group: 'org.json'
        // HttpClient already included by adk.
        exclude group: 'org.apache.httpcomponents'
        exclude group: 'joda-time', module: 'joda-time'
    }
    compile files('libs/acra-4.5.0.jar')
    compile 'com.android.support:appcompat-v7:20.0.0'
    compile 'com.android.support:support-v4:20.0.0'
    compile 'com.google.android.gms:play-services-base:6.5.87'
    compile 'org.mongodb:mongo-java-driver:2.10.1'
    compile 'net.danlew:android.joda:2.6.0'
    compile 'com.google.guava:guava:18.0'
//    compile 'com.noveogroup.android:android-logger:1.3.4'

    compile 'com.embarkmobile:zxing-android-minimal:2.0.0@aar'
    compile 'com.embarkmobile:zxing-android-legacy:2.0.0@aar'
    compile 'com.embarkmobile:zxing-android-integration:2.0.0@aar'
    compile 'com.google.zxing:core:3.0.1'

    compile 'com.getpebble:pebblekit:2.6.0@aar'

    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
    androidTestCompile 'org.mockito:mockito-core:1.9.5'
    androidTestCompile('junit:junit:4.11') {
        exclude module: 'hamcrest-core'
    }
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
    androidTestCompile 'org.mockito:mockito-core:1.9.5'
    androidTestCompile('org.robolectric:robolectric:2.4') {
        exclude module: 'classworlds'
        exclude module: 'commons-logging'
        exclude module: 'httpclient'
        exclude module: 'maven-artifact'
        exclude module: 'maven-artifact-manager'
        exclude module: 'maven-error-diagnostics'
        exclude module: 'maven-model'
        exclude module: 'maven-project'
        exclude module: 'maven-settings'
        exclude module: 'plexus-container-default'
        exclude module: 'plexus-interpolation'
        exclude module: 'plexus-utils'
        exclude module: 'wagon-file'
        exclude module: 'wagon-http-lightweight'
        exclude module: 'wagon-provider-api'
    }
}

apply plugin: 'idea'

idea {
    module {
        testOutputDir = file('build/test-classes/debug')
    }
}

// Force 'app:test' to run after 'core:test'. This way, we fail fast if something is broken with
// core.
test.mustRunAfter ":core:test"

apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.7.1.201405082137"
    reportsDir = file("$buildDir/jacoco")
}

sourceSets {
    main {
        java.srcDirs = ['src']
    }
}

def coverageSourceDirs = [
        '../app/src/main/java'
]

task jacocoTestReport(type:JacocoReport, dependsOn: "testDebug") {
    group = "Reporting"

    description = "Generate Jacoco app coverage reports"

    classDirectories = fileTree(
            dir: '../app/build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/USB/*.*',
                       '**/proto/*.*',
                       '**/Manifest*.*']
    )

    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('../app/build/jacoco/testDebug.exec')

    reports {
        xml.enabled = true
        html.enabled = true
    }
}
