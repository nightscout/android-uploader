apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

dependencies {
    compile 'joda-time:joda-time:2.5'
    compile 'com.google.guava:guava:18.0'
    compile 'org.slf4j:slf4j-simple:1.7.7'
    compile 'org.mongodb:mongo-java-driver:2.10.1'
    /** Android-provided **/
    // this is an old version of JSON, but it is the most compatible with the android version.
    // We exclude it in :app, because org.json is included in the adk.
    compile 'org.json:json:20090211'
    // as with JSON, this httpclient version is old, but hopefully matches what is in android.
    // We exclude it in :app
    compile 'org.apache.httpcomponents:httpclient:4.3'
    testCompile 'org.slf4j:slf4j-simple:1.7.7'
    testCompile 'junit:junit:4.11'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'org.mockito:mockito-core:1.9.5'
    compile 'com.google.protobuf:protobuf-java:2.6.1'
}

apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.7.1.201405082137"
    reportsDir = file("build/reports/jacoco/")
}

jacocoTestReport {
    additionalSourceDirs = files(sourceSets.main.allSource.srcDirs)
    sourceDirectories = files(sourceSets.main.allSource.srcDirs)
    classDirectories =  files(sourceSets.main.output)
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
}

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }
        }
    }
}

bintray {
    user = bintrayUser  //this usually comes form gradle.properties file in ~/.gradle
    key = bintrayKey //this usually comes form gradle.properties file in ~/.gradle
    publications = ['mavenJava'] // see publications closure
    pkg { //package will be created if does not exist
        repo = 'android-uploader'
        userOrg = 'nightscout' // an optional organization name when the repo belongs to one of the user's orgs
        name = 'core'
        desc = 'Nightscout core library, containing all non-android specific code.'
        licenses = ['GPLv3']
        labels = ['android', 'java', 'nightscout']
    }
}
