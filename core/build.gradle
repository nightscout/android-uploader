apply plugin: 'java'
apply plugin: 'maven'
group='com.github.nightscout'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

repositories {
    maven { url "https://repo.eclipse.org/content/repositories/paho-releases/" }
}

dependencies {
    compile 'joda-time:joda-time:2.5'
    compile 'net.tribe7.seeds:seeds-functional:16.0.1'
    compile 'net.tribe7.seeds:seeds-hash:16.0.1'
    compile 'net.tribe7.seeds:seeds-strings:16.0.1'
    compile 'net.tribe7.seeds:seeds-primitives:16.0.1'
    compile 'net.tribe7.seeds:seeds-io:16.0.1'

    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'org.mongodb:mongo-java-driver:2.10.1'
    /** Android-provided **/
    // this is an old version of JSON, but it is the most compatible with the android version.
    // We exclude it in :app, because org.json is included in the adk.
    compile 'org.json:json:20090211'
    // as with JSON, this httpclient version is old, but hopefully matches what is in android.
    // We exclude it in :app
    compile 'org.apache.httpcomponents:httpclient:4.3'
    testCompile 'org.slf4j:slf4j-simple:1.7.7'
    testCompile 'junit:junit:4.11'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'org.mockito:mockito-core:1.10.17'
    compile 'com.squareup.wire:wire-runtime:1.8.0'
    compile 'org.eclipse.paho:mqtt-client:0.4.0'
    compile 'com.squareup:otto:1.3.5'
    compile 'io.reactivex:rxjava:1.0.0'
}

apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.7.1.201405082137"
    reportsDir = file("build/reports/jacoco/")
}

sourceSets {
    test {
        resources {
            srcDir "main/resources"
        }
    }
}

jacocoTestReport {
    additionalSourceDirs = files(sourceSets.main.allSource.srcDirs)
    sourceDirectories = files(sourceSets.main.allSource.srcDirs)
    classDirectories = files(sourceSets.main.output)
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
