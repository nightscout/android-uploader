// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: core/src/main/java/com/nightscout/core/model/v2/g4_data.proto
package com.nightscout.core.model.v2;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.UINT64;

/**
 * Next tag: 3
 */
public final class G4Timestamp extends Message {
  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_SYSTEM_TIME_SEC = 0L;
  public static final Long DEFAULT_DISPLAY_TIME_SEC = 0L;

  /**
   * The internal clock of the receiver
   */
  @ProtoField(tag = 1, type = UINT64)
  public final Long system_time_sec;

  /**
   * The user configured time displayed on the receiver
   */
  @ProtoField(tag = 2, type = UINT64)
  public final Long display_time_sec;

  public G4Timestamp(Long system_time_sec, Long display_time_sec) {
    this.system_time_sec = system_time_sec;
    this.display_time_sec = display_time_sec;
  }

  private G4Timestamp(Builder builder) {
    this(builder.system_time_sec, builder.display_time_sec);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof G4Timestamp)) return false;
    G4Timestamp o = (G4Timestamp) other;
    return equals(system_time_sec, o.system_time_sec)
        && equals(display_time_sec, o.display_time_sec);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = system_time_sec != null ? system_time_sec.hashCode() : 0;
      result = result * 37 + (display_time_sec != null ? display_time_sec.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<G4Timestamp> {

    public Long system_time_sec;
    public Long display_time_sec;

    public Builder() {
    }

    public Builder(G4Timestamp message) {
      super(message);
      if (message == null) return;
      this.system_time_sec = message.system_time_sec;
      this.display_time_sec = message.display_time_sec;
    }

    /**
     * The internal clock of the receiver
     */
    public Builder system_time_sec(Long system_time_sec) {
      this.system_time_sec = system_time_sec;
      return this;
    }

    /**
     * The user configured time displayed on the receiver
     */
    public Builder display_time_sec(Long display_time_sec) {
      this.display_time_sec = display_time_sec;
      return this;
    }

    @Override
    public G4Timestamp build() {
      return new G4Timestamp(this);
    }
  }
}
