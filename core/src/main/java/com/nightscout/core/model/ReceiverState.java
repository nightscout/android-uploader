// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: /Users/klee/Projects/Nightscout/android-uploader/core/src/main/java/com/nightscout/core/model/Download.proto
package com.nightscout.core.model;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.UINT64;
import static com.squareup.wire.Message.Label.REPEATED;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class ReceiverState extends Message {

    public static final Long DEFAULT_TIMESTAMP_MS = 0L;
    public static final List<ReceiverStatus> DEFAULT_EVENT = Collections.emptyList();

    @ProtoField(tag = 1, type = UINT64, label = REQUIRED)
    public final Long timestamp_ms;

    @ProtoField(tag = 2, type = ENUM, label = REPEATED)
    public final List<ReceiverStatus> event;

    public ReceiverState(Long timestamp_ms, List<ReceiverStatus> event) {
        this.timestamp_ms = timestamp_ms;
        this.event = immutableCopyOf(event);
    }

    private ReceiverState(Builder builder) {
        this(builder.timestamp_ms, builder.event);
        setBuilder(builder);
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof ReceiverState)) return false;
        ReceiverState o = (ReceiverState) other;
        return equals(timestamp_ms, o.timestamp_ms)
                && equals(event, o.event);
    }

    @Override
    public int hashCode() {
        int result = hashCode;
        if (result == 0) {
            result = timestamp_ms != null ? timestamp_ms.hashCode() : 0;
            result = result * 37 + (event != null ? event.hashCode() : 1);
            hashCode = result;
        }
        return result;
    }

    public static final class Builder extends Message.Builder<ReceiverState> {

        public Long timestamp_ms;
        public List<ReceiverStatus> event;

        public Builder() {
        }

        public Builder(ReceiverState message) {
            super(message);
            if (message == null) return;
            this.timestamp_ms = message.timestamp_ms;
            this.event = copyOf(message.event);
        }

        public Builder timestamp_ms(Long timestamp_ms) {
            this.timestamp_ms = timestamp_ms;
            return this;
        }

        public Builder event(List<ReceiverStatus> event) {
            this.event = checkForNulls(event);
            return this;
        }

        @Override
        public ReceiverState build() {
            checkRequiredFields();
            return new ReceiverState(this);
        }
    }
}
